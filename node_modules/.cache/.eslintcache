[{"/Users/pranay.j/giphy-app/src/index.js":"1","/Users/pranay.j/giphy-app/src/App.js":"2","/Users/pranay.j/giphy-app/src/reportWebVitals.js":"3","/Users/pranay.j/giphy-app/src/common/ThemeContext.js":"4","/Users/pranay.j/giphy-app/src/components/SearchGif/SearchGif.js":"5","/Users/pranay.j/giphy-app/src/components/LoadingGif/LoadingGif.js":"6","/Users/pranay.j/giphy-app/src/components/GifContainer/GifContainer.js":"7","/Users/pranay.j/giphy-app/src/components/ToggleTheme/ToggleTheme.js":"8","/Users/pranay.j/giphy-app/src/common/common.js":"9","/Users/pranay.j/giphy-app/src/components/Gif/Gif.js":"10","/Users/pranay.j/giphy-app/src/components/DialogPopup/DialogPopup.js":"11"},{"size":541,"mtime":1656865878153,"results":"12","hashOfConfig":"13"},{"size":3553,"mtime":1656865878148,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1656865878153,"results":"15","hashOfConfig":"13"},{"size":138,"mtime":1656865878148,"results":"16","hashOfConfig":"13"},{"size":906,"mtime":1656869415065,"results":"17","hashOfConfig":"13"},{"size":629,"mtime":1656869415065,"results":"18","hashOfConfig":"13"},{"size":516,"mtime":1656865878150,"results":"19","hashOfConfig":"13"},{"size":570,"mtime":1656865878152,"results":"20","hashOfConfig":"13"},{"size":233,"mtime":1656865878148,"results":"21","hashOfConfig":"13"},{"size":788,"mtime":1656865878149,"results":"22","hashOfConfig":"13"},{"size":1276,"mtime":1656869415066,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"tv8itb",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/pranay.j/giphy-app/src/index.js",[],[],"/Users/pranay.j/giphy-app/src/App.js",["58","59","60"],[],"import React, { useEffect, useState, useCallback, useRef } from 'react';\nimport SearchGif from './components/SearchGif/SearchGif';\nimport ToggleTheme from './components/ToggleTheme/ToggleTheme';\nimport GifContainer from './components/GifContainer/GifContainer';\nimport LoadingGif from './components/LoadingGif/LoadingGif';\nimport ThemeContext from './common/ThemeContext';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  console.log(\"in app.js \")\n  const [gifData, setGifData] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [darkTheme, setDarkTheme] = useState(true);\n  const [loading, setLoading] = useState(true);\n  const isTrue = useRef(true);\n  const [pageNumber, setPageNumber] = useState(0);\n  const [triggerIntersectionObserver, setTriggerIntersectionObserver] = useState(false);\n  const loader = useRef(null);\n\n  /***\n   * Netlify function gets called from here.\n   */\n  async function getGifs(offset) {\n    setLoading(true)\n    const response = searchQuery ? await axios.get(`/.netlify/functions/get_search_gifs?q=${searchQuery}&offset=${offset}`) : await axios.get(`/.netlify/functions/get_trending_gifs?offset=${offset}`)\n    if(response.data.response) {\n      setGifData(prev => {\n        return [...prev, ...response.data.response.data]\n      })\n      setLoading(false)\n    }\n  }\n\n  // Intersection Observer\n  const handleObserver = useCallback((entries) => {\n    const [target] = entries;\n    if(isTrue.current) {\n      isTrue.current = false;\n      return;\n    }\n    if (target.isIntersecting && Math.floor(target.intersectionRatio) === 1) {\n      setPageNumber(prev => prev + 20);\n      setTriggerIntersectionObserver(prev => !prev);\n    }\n  }, []);\n\n  useEffect(() => {\n    getGifs(pageNumber)\n  }, [triggerIntersectionObserver])\n\n  useEffect(() => {\n    setGifData([]);\n    setPageNumber(0);\n}, [searchQuery]);\n\n  useEffect(() => {\n    const option = {\n      root: null,\n      rootMargin: \"10px\",\n      threshold: 0\n    };\n    const observer = new IntersectionObserver(handleObserver, option);\n    if (loader.current) observer.observe(loader.current);\n    \n    return () => {\n      if (loader.current) {\n          observer.unobserve(loader.current);\n      }\n    }\n  }, []);\n  \n  const toggleTheme = () => {\n    setDarkTheme(!darkTheme);\n  }\n\n  return (\n    <ThemeContext.Provider value={{darkTheme: darkTheme}}>\n      <div className={`App px-10 right-align ${darkTheme ? 'dark' : 'light'}`}>\n        <div className=\"sticky container-fluid\">\n          <div className={`row pb-3 ${darkTheme ? 'dark' : 'light'}`}>\n            <span className={`col-lg-4 col-md-4 col-sm-12 center-align mt-3 ${darkTheme ? 'darkTitle' : 'lightTitle'}`}>Giphy Infinite Scroll</span>\n            <div className=\"col-lg-8 col-md-8 col-sm-12 right-align center-align mt-3\">\n              <SearchGif setSearchQuery={setSearchQuery}/>\n              <ToggleTheme toggleTheme={toggleTheme}/>\n            </div>\n          </div>\n          <div>\n            {\n              loading ? <div className=\"grad1\"></div> : <hr className={`${darkTheme ? 'darkLine' : 'lightLine'}`}></hr>\n            }\n          </div>\n        </div>\n        <div className={`${darkTheme ? 'darkDiv' : 'lightDiv'}`}></div>\n        <div className='space-around my-2 py-2 px-10'>\n          <GifContainer gifData={gifData} />\n        </div>\n        <div ref={loader}>\n          {\n              loading ? <LoadingGif  darkTheme={darkTheme}/> : <></>\n          }\n        </div>\n      </div>\n    </ThemeContext.Provider>\n  );\n}\nexport default App;","/Users/pranay.j/giphy-app/src/reportWebVitals.js",[],[],"/Users/pranay.j/giphy-app/src/common/ThemeContext.js",[],[],"/Users/pranay.j/giphy-app/src/components/SearchGif/SearchGif.js",[],[],"/Users/pranay.j/giphy-app/src/components/LoadingGif/LoadingGif.js",[],[],"/Users/pranay.j/giphy-app/src/components/GifContainer/GifContainer.js",[],[],"/Users/pranay.j/giphy-app/src/components/ToggleTheme/ToggleTheme.js",[],[],"/Users/pranay.j/giphy-app/src/common/common.js",[],[],"/Users/pranay.j/giphy-app/src/components/Gif/Gif.js",[],[],"/Users/pranay.j/giphy-app/src/components/DialogPopup/DialogPopup.js",[],[],{"ruleId":"61","severity":1,"message":"62","line":50,"column":6,"nodeType":"63","endLine":50,"endColumn":35,"suggestions":"64"},{"ruleId":"61","severity":1,"message":"65","line":68,"column":37,"nodeType":"66","endLine":68,"endColumn":44},{"ruleId":"61","severity":1,"message":"67","line":71,"column":6,"nodeType":"63","endLine":71,"endColumn":8,"suggestions":"68"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getGifs' and 'pageNumber'. Either include them or remove the dependency array.","ArrayExpression",["69"],"The ref value 'loader.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'loader.current' to a variable inside the effect, and use that variable in the cleanup function.","Identifier","React Hook useEffect has a missing dependency: 'handleObserver'. Either include it or remove the dependency array.",["70"],{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},"Update the dependencies array to be: [getGifs, pageNumber, triggerIntersectionObserver]",{"range":"75","text":"76"},"Update the dependencies array to be: [handleObserver]",{"range":"77","text":"78"},[1766,1795],"[getGifs, pageNumber, triggerIntersectionObserver]",[2237,2239],"[handleObserver]"]